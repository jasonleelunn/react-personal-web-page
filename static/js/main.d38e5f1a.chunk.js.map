{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","ChildTest","props","state","name","colortop","colorbottom","text","handleChange","bind","changeColour","e","target","value","this","onChange","newColourTop","newColourBottom","textValue","setState","className","style","background","onClick","color","id","React","Component","HomePage","src","logo","alt","AboutPage","NavBar","class","href","Boolean","window","location","hostname","match","ParentTest","changeName","newName","Build","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4HAAAA,EAAOC,QAAU,IAA0B,kC,uOCQ9BC,G,MAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,KAAM,QACNC,SATS,UAUTC,YAXS,UAYTC,KAAM,aAGR,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAXH,EADrB,yDAeeE,GACX,IAAMP,EAAOO,EAAEC,OAAOC,MACtBC,KAAKZ,MAAMa,SAASX,KAjBxB,qCAqBI,IAAMY,EAxBK,YAwBUF,KAAKX,MAAME,SAzBrB,UACA,UAyBLY,EA1BK,YA0BaH,KAAKX,MAAMG,YAzBxB,UADA,UA2BLY,EAAgC,cAApBJ,KAAKX,MAAMI,KAAuB,aAAe,YACnEO,KAAKK,SAAS,CACdd,SAAUW,EACVV,YAAaW,EACbV,KAAMW,MA3BV,+BAiCI,OACE,6BAEA,yBAAKE,UAAU,YAAYC,MAAO,CAACC,WAAYR,KAAKX,MAAME,WAEzD,4BAAQe,UAAU,cAAcG,QAAST,KAAKJ,cAC3CI,KAAKX,MAAMI,MAGd,wBAAIc,MAAO,CAACG,MAAOV,KAAKX,MAAMG,cAA9B,qBACuBQ,KAAKZ,MAAME,KADlC,KAIA,4BAAQqB,GAAG,cAAcV,SAAUD,KAAKN,cACpC,4BAAQK,MAAM,SAAd,SAIA,4BAAQA,MAAM,WAAd,WAIA,4BAAQA,MAAM,QAAd,eAvDX,GAA+Ba,IAAMC,YAgFxBC,EAAW,kBACxB,yBAAKR,UAAU,YACd,wCACA,yBAAKS,IAAKC,IAAMV,UAAU,WAAWW,IAAI,WAI7BC,EAAY,kBACzB,yBAAKZ,UAAU,aACd,0CACA,kiBAWYa,EAAb,uKAOE,OACC,yBAAKb,UAAU,WACb,uBAAGc,MAAM,SAASC,KAAK,KAAvB,QACA,uBAAGA,KAAK,YAAR,kBACA,uBAAGA,KAAK,UAAR,SACA,uBAAGA,KAAK,2DAAR,eACA,uBAAGA,KAAK,wCAAR,oBAbL,GAA4BT,IAAMC,WCjGdS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICLAC,E,kDAEL,WAAYvC,GAAQ,IAAD,8BAChB,cAAMA,IAEDC,MAAQ,CAAEC,KAAM,SAErB,EAAKsC,WAAa,EAAKA,WAAWjC,KAAhB,gBALF,E,uDAQNkC,GACV7B,KAAKK,SAAS,CACff,KAAMuC,M,+BAKL,OACF,6BAEC,kBAAC,EAAD,CAAWvC,KAAMU,KAAKX,MAAMC,KAAMW,SAAUD,KAAK4B,kB,GApB3BhB,IAAMC,WA4BzBiB,E,uKAEJ,OACC,kBAAC,IAAD,KACM,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,2BAA2BC,UAAWnB,IACxD,kBAAC,IAAD,CAAOkB,KAAK,kCAAkCC,UAAWN,IACzD,kBAAC,IAAD,CAAOK,KAAK,gCAAgCC,UAAWf,U,GAR9CN,IAAMC,WAe1BqB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,SDuEpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d38e5f1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst color2 = '#000000';\nconst color1 = '#FFFFFF';\n\n\nexport class ChildTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      name: 'Jason',\n      colortop: color1,\n      colorbottom: color2,\n      text: 'Dark Mode'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.changeColour = this.changeColour.bind(this);\n  }\n\n  handleChange(e) {\n    const name = e.target.value;\n    this.props.onChange(name);\n  }\n\n  changeColour() {\n    const newColourTop = this.state.colortop === color1 ? color2 : color1;\n    const newColourBottom = this.state.colorbottom === color2 ? color1 : color2;\n    const textValue = this.state.text === 'Dark Mode' ? 'Light Mode' : 'Dark Mode'\n    this.setState({\n    colortop: newColourTop,\n    colorbottom: newColourBottom,\n    text: textValue\n    });\n  }\n\n\n  render() {\n    return (\n      <div>\n\n      <div className=\"ChildTest\" style={{background: this.state.colortop}} >\n  \n\t      <button className=\"childButton\" onClick={this.changeColour}>\n\t        {this.state.text}\n\t      </button>\n\n\t      <h1 style={{color: this.state.colorbottom}}>\n\t          Hello, my name is {this.props.name}!\n\t      </h1>\n\n\t      <select id=\"great-names\" onChange={this.handleChange}>\n\t          <option value=\"Jason\">\n\t            Jason\n\t          </option>\n\n\t          <option value=\"Jay Man\">\n\t            Jay Man\n\t          </option>\n\n\t          <option value=\"Jase\">\n\t            Jase\n\t          </option>\n\t      </select>\n      </div>\n    \n\n{/*    <div className=\"App\" style={{background: this.state.colorbottom, color: this.state.colortop}} >\n      <header className=\"App-header\">\n        \n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n        </a>\n      </header>\n    </div>*/}\n\n    </div>\n    );\n  }\n}\n\nexport const HomePage = () => (\n<div className=\"HomePage\">\n\t<h1>Welcome!</h1>\n\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n</div>\n);\n\nexport const AboutPage = () => (\n<div className=\"AboutPage\">\n\t<h1>About Page</h1>\n\t<a> \n\tThis website is a personal project of mine, attempting to expand my programming knowledge\n\tusing the JavaScript library 'React'. I would like build these pages with the notion of easy up-scaling\n\tto ensure all code written is to the highest standard of my personal ability.\n\tAt the time of writing this, my plans for the content on this website are vague. \n\tI want to become comfortable with the language, framework and features of Reactjs before adding any large amounts\n\tof my own personal content and other projects.\n\t</a>\n</div>\n);\n\nexport class NavBar extends React.Component {\n\t// constructor(props) {\n\t// \tsuper(props);\n\n\t// }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"mainNav\" >\n\t\t\t  <a class=\"active\" href=\"/\">Home</a>\n\t\t\t  <a href=\"/testing\">Testing Ground</a>\n\t\t\t  <a href=\"/about\">About</a>\n\t\t\t  <a href=\"https://github.com/jasonleelunn/react-personal-web-page\">GitHub Repo</a>\n\t\t\t  <a href=\"https://linkedin.com/in/jasonleelunn\">My LinkedIn</a>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './index.css';\n// import App from './App';\nimport {ChildTest} from './App';\nimport {NavBar} from './App';\nimport {AboutPage} from './App';\nimport {HomePage} from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nclass ParentTest extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n\n    this.state = { name: 'Jason' };\n    \n    this.changeName = this.changeName.bind(this);\n  }\n\n   changeName(newName) {\n    this.setState({\n \t\tname: newName\n    });\n  }\n \n  render() {\n    return (\n\t\t<div>\n\n\t\t\t<ChildTest name={this.state.name} onChange={this.changeName} />\n\n  \t\t</div>\n\n    );\n  }\n}\n\nclass Build extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t        <div>\n\t          <NavBar />\n\t          <Route exact path=\"react-personal-web-page/\" component={HomePage} />\n\t          <Route path=\"react-personal-web-page/testing\" component={ParentTest} />\n\t          <Route path=\"react-personal-web-page/about\" component={AboutPage} />\n\t        </div>\n\t      </Router>\n\t\t\t);\n\t}\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Build />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}